{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/React/MY PROJECTS/pokesimple/client/src/components/UI/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useContext, useEffect } from \"react\";\nimport PokemonContext from \"../../context/pokemon/PokemonContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchBar = () => {\n  _s();\n\n  const pokemonContext = useContext(PokemonContext);\n  const {\n    getPokemon,\n    pokemon,\n    loading,\n    color,\n    getNewColor\n  } = pokemonContext;\n  const [searchText, setSearchText] = useState(\"\");\n  useEffect(() => {\n    const bar = document.getElementById(\"searchField\");\n    bar.addEventListener(\"keydown\", e => {\n      if (e.key === \"Enter\") {\n        const searchItem = bar.value.toLowerCase();\n        getPokemon(searchItem);\n      }\n    });\n  }, []);\n\n  function handleSearchChange(value) {\n    setSearchText(value);\n  }\n\n  function handleSearchSubmit(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"fragment\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"searchField\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"searchInput\",\n      name: \"searchField\",\n      id: \"searchField\",\n      placeholder: \"Name or Number\",\n      onChange: e => {\n        handleSearchChange(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"s2kU1MlrXKaovixOV/Vp3GCOb50=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/r/Desktop/React/MY PROJECTS/pokesimple/client/src/components/UI/SearchBar.js"],"names":["React","Fragment","useState","useContext","useEffect","PokemonContext","SearchBar","pokemonContext","getPokemon","pokemon","loading","color","getNewColor","searchText","setSearchText","bar","document","getElementById","addEventListener","e","key","searchItem","value","toLowerCase","handleSearchChange","handleSearchSubmit","preventDefault","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,SAAhD,QAAiE,OAAjE;AAEA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,cAAc,GAAGJ,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA;AAAvC,MAAuDL,cAA7D;AAEA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAZ;AACAF,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,SAArB,EAAiCC,CAAD,IAAO;AACrC,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,cAAMC,UAAU,GAAGN,GAAG,CAACO,KAAJ,CAAUC,WAAV,EAAnB;AACAf,QAAAA,UAAU,CAACa,UAAD,CAAV;AACD;AACF,KALD;AAMD,GARQ,EAQN,EARM,CAAT;;AAUA,WAASG,kBAAT,CAA4BF,KAA5B,EAAmC;AACjCR,IAAAA,aAAa,CAACQ,KAAD,CAAb;AACD;;AAED,WAASG,kBAAT,CAA4BN,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACO,cAAF;AACD;;AAED,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,aAFZ;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,EAAE,EAAC,aAJL;AAKE,MAAA,WAAW,EAAC,gBALd;AAME,MAAA,QAAQ,EAAGP,CAAD,IAAO;AACfK,QAAAA,kBAAkB,CAACL,CAAC,CAACQ,MAAF,CAASL,KAAV,CAAlB;AACD;AARH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvCM;;GAAMhB,S;;KAAAA,S","sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from \"react\";\n\nimport PokemonContext from \"../../context/pokemon/PokemonContext\";\n\nexport const SearchBar = () => {\n  const pokemonContext = useContext(PokemonContext);\n  const { getPokemon, pokemon, loading, color, getNewColor } = pokemonContext;\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    const bar = document.getElementById(\"searchField\");\n    bar.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\") {\n        const searchItem = bar.value.toLowerCase();\n        getPokemon(searchItem);\n      }\n    });\n  }, []);\n\n  function handleSearchChange(value) {\n    setSearchText(value);\n  }\n\n  function handleSearchSubmit(e) {\n    e.preventDefault();\n  }\n\n  return (\n    <fragment>\n      <label htmlFor=\"searchField\"></label>\n      <input\n        type=\"text\"\n        className=\"searchInput\"\n        name=\"searchField\"\n        id=\"searchField\"\n        placeholder=\"Name or Number\"\n        onChange={(e) => {\n          handleSearchChange(e.target.value);\n        }}\n      />\n    </fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}