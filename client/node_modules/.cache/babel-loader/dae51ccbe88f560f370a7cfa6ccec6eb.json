{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/React/MY PROJECTS/pokesimple/src/context/pokemon/PokemonState.js\",\n    _s = $RefreshSig$();\n\nimport { NEW_POKEMON } from \"../types\";\nimport React, { useReducer } from \"react\";\nimport PokemonContext from \"./PokemonContext\";\nimport PokemonReducer from \"./PokemonReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonState = props => {\n  _s();\n\n  const initialState = {\n    pokemon: null,\n    pokemonStats: null,\n    loading: true\n  }; //? Array is the state and dispatch (current state and action(what we call to edit the state))\n  //? ContactReducer ... Is the switch statement that takes in a COMMAND FROM the array second arguement.\n\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\n\n  const getPokemon = async number => {\n    console.log(\"Get pokemon running\");\n    const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${number}?limit=60`);\n    const pokemon = await data.json();\n    console.log(pokemon);\n    dispatch({\n      type: NEW_POKEMON,\n      payload: pokemon\n    });\n  }; //! Returns the provider with its value - then props.children is just anything else added in betweem.\n\n\n  return /*#__PURE__*/_jsxDEV(PokemonContext.Provider, {\n    value: {\n      pokemon: state.pokemon,\n      loading: state.loading,\n      getPokemon\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = PokemonState;\nexport default PokemonState;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonState\");","map":{"version":3,"sources":["/Users/r/Desktop/React/MY PROJECTS/pokesimple/src/context/pokemon/PokemonState.js"],"names":["NEW_POKEMON","React","useReducer","PokemonContext","PokemonReducer","PokemonState","props","initialState","pokemon","pokemonStats","loading","state","dispatch","getPokemon","number","console","log","data","fetch","json","type","payload","children"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,UAA5B;AAEA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,YAAY,EAAE,IAFK;AAGnBC,IAAAA,OAAO,EAAE;AAHU,GAArB,CAD8B,CAO9B;AACA;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACE,cAAD,EAAiBG,YAAjB,CAApC;;AAEA,QAAMM,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,qCAAoCJ,MAAO,WADtB,CAAxB;AAGA,UAAMN,OAAO,GAAG,MAAMS,IAAI,CAACE,IAAL,EAAtB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAI,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEpB,WAAR;AAAqBqB,MAAAA,OAAO,EAAEb;AAA9B,KAAD,CAAR;AACD,GARD,CAX8B,CAqB9B;;;AACA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,OAAO,EAAEG,KAAK,CAACH,OADV;AAELE,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFV;AAGLG,MAAAA;AAHK,KADT;AAAA,cAOGP,KAAK,CAACgB;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCD;;GAAMjB,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import { NEW_POKEMON } from \"../types\";\n\nimport React, { useReducer } from \"react\";\nimport PokemonContext from \"./PokemonContext\";\nimport PokemonReducer from \"./PokemonReducer\";\n\nconst PokemonState = (props) => {\n  const initialState = {\n    pokemon: null,\n    pokemonStats: null,\n    loading: true,\n  };\n\n  //? Array is the state and dispatch (current state and action(what we call to edit the state))\n  //? ContactReducer ... Is the switch statement that takes in a COMMAND FROM the array second arguement.\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\n\n  const getPokemon = async (number) => {\n    console.log(\"Get pokemon running\");\n    const data = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/${number}?limit=60`\n    );\n    const pokemon = await data.json();\n    console.log(pokemon);\n    dispatch({ type: NEW_POKEMON, payload: pokemon });\n  };\n\n  //! Returns the provider with its value - then props.children is just anything else added in betweem.\n  return (\n    <PokemonContext.Provider\n      value={{\n        pokemon: state.pokemon,\n        loading: state.loading,\n        getPokemon,\n      }}\n    >\n      {props.children}\n    </PokemonContext.Provider>\n  );\n};\n\nexport default PokemonState;\n"]},"metadata":{},"sourceType":"module"}