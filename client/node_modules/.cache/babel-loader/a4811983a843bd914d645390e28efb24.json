{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/React/MY PROJECTS/pokesimple/client/src/components/Chatbox/ChatWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport ChatContext from \"../../context/chat/ChatContext\";\nimport PokemonContext from \"../../context/pokemon/PokemonContext\";\nimport { CircleButton } from \"../../components/UI/CircleButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatWindow = () => {\n  _s();\n\n  const chatContext = useContext(ChatContext);\n  const pokemonContext = useContext(PokemonContext);\n  const {\n    messages,\n    onMessage,\n    isShown,\n    onChatResize\n  } = chatContext;\n  const {\n    color\n  } = pokemonContext;\n  const [typing, setTyping] = useState([]);\n  const [connceted, setConnected] = useState(true);\n  const socketRef = useRef();\n  useEffect(() => {\n    // Set the IO object for handling socket\n    socketRef.current = io(\"http://localhost:3333\"); // On recieving connecting  confirmaiton\n\n    socketRef.current.on(\"connected\", () => {\n      setConnected(true);\n    }); // On getting a newmessag from the esrver\n\n    socketRef.current.on(\"newMessage\", message => {\n      onMessage(message);\n    }); // On demount close connection\n\n    return () => socketRef.current.disconnect();\n  }, [messages, color]); // Handle when the user types\n\n  const handleTyping = () => {\n    setTyping(document.getElementById(\"chatInput\").value);\n  }; // Handle the submit button on the chat\n\n\n  const handleChatSubmit = e => {\n    const input = document.getElementById(\"chatInput\").value;\n    const message = {\n      name: \"Russell\",\n      message: input\n    };\n    socketRef.current.emit(\"message\", message);\n  };\n\n  const handleCloseWindow = () => {\n    onChatResize();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatWindow\",\n    style: isShown ? {\n      left: \"0\"\n    } : {\n      left: \"-100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notConnected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWindow__messages\",\n      children: [messages.map(message => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(CircleButton, {\n        id: \"fas fa-times\",\n        addedClass: \"circleButton__closeChat\",\n        handleOnClick: handleCloseWindow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWindow__submitArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chatWindow__submitArea__input\",\n        id: \"chatInput\",\n        onChange: handleTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatWindow__submitArea__submitButton\",\n        onClick: handleChatSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatWindow, \"XWBNnlwGpKHOj4AbaAKFO4Z+uGA=\");\n\n_c = ChatWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"sources":["/Users/r/Desktop/React/MY PROJECTS/pokesimple/client/src/components/Chatbox/ChatWindow.js"],"names":["React","useContext","useEffect","useState","useRef","io","ChatContext","PokemonContext","CircleButton","ChatWindow","chatContext","pokemonContext","messages","onMessage","isShown","onChatResize","color","typing","setTyping","connceted","setConnected","socketRef","current","on","message","disconnect","handleTyping","document","getElementById","value","handleChatSubmit","e","input","name","emit","handleCloseWindow","left","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport ChatContext from \"../../context/chat/ChatContext\";\nimport PokemonContext from \"../../context/pokemon/PokemonContext\";\n\nimport { CircleButton } from \"../../components/UI/CircleButton\";\n\nexport const ChatWindow = () => {\n  const chatContext = useContext(ChatContext);\n  const pokemonContext = useContext(PokemonContext);\n\n  const { messages, onMessage, isShown, onChatResize } = chatContext;\n  const { color } = pokemonContext;\n\n  const [typing, setTyping] = useState([]);\n  const [connceted, setConnected] = useState(true);\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    // Set the IO object for handling socket\n    socketRef.current = io(\"http://localhost:3333\");\n\n    // On recieving connecting  confirmaiton\n    socketRef.current.on(\"connected\", () => {\n      setConnected(true);\n    });\n\n    // On getting a newmessag from the esrver\n    socketRef.current.on(\"newMessage\", (message) => {\n      onMessage(message);\n    });\n\n    // On demount close connection\n    return () => socketRef.current.disconnect();\n  }, [messages, color]);\n\n  // Handle when the user types\n  const handleTyping = () => {\n    setTyping(document.getElementById(\"chatInput\").value);\n  };\n\n  // Handle the submit button on the chat\n  const handleChatSubmit = (e) => {\n    const input = document.getElementById(\"chatInput\").value;\n    const message = { name: \"Russell\", message: input };\n    socketRef.current.emit(\"message\", message);\n  };\n\n  const handleCloseWindow = () => {\n    onChatResize();\n  };\n\n  return (\n    <div\n      className=\"chatWindow\"\n      style={isShown ? { left: \"0\" } : { left: \"-100%\" }}\n    >\n      <div className=\"notConnected\"></div>\n      <div className=\"chatWindow__messages\">\n        {messages.map((message) => {\n          return (\n            <div className=\"message\">\n              <p>{message.name}</p>\n              <p>{message.message}</p>\n            </div>\n          );\n        })}\n        <CircleButton\n          id={\"fas fa-times\"}\n          addedClass=\"circleButton__closeChat\"\n          handleOnClick={handleCloseWindow}\n        />\n      </div>\n      <div className=\"chatWindow__submitArea\">\n        <textarea\n          className=\"chatWindow__submitArea__input\"\n          id={\"chatInput\"}\n          onChange={handleTyping}\n        />\n        <button\n          className=\"chatWindow__submitArea__submitButton\"\n          onClick={handleChatSubmit}\n        ></button>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}