{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/React/MY PROJECTS/pokesimple/src/context/pokemon/PokemonState.js\",\n    _s = $RefreshSig$();\n\nimport { NEW_POKEMON, SET_COLOR } from \"../types\";\nimport React, { useReducer } from \"react\";\nimport PokemonContext from \"./PokemonContext\";\nimport PokemonReducer from \"./PokemonReducer\";\nimport { Capitalise } from \"../../utils/Capitalise\";\nimport ColorThief from \"../../../node_modules/colorthief/dist/color-thief.mjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonState = props => {\n  _s();\n\n  const initialState = {\n    pokemon: null,\n    color: null,\n    pokemonStats: null,\n    loading: true\n  }; //? Array is the state and dispatch (current state and action(what we call to edit the state))\n  //? ContactReducer ... Is the switch statement that takes in a COMMAND FROM the array second arguement.\n\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\n\n  const getPokemon = async number => {\n    const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${number}`);\n    const json = await data.json();\n    const pokemon = {\n      id: json.id,\n      name: Capitalise(json.name),\n      sprite: json.sprites.other.dream_world.front_default || json.sprites.other.official - artwork.front_default,\n      type: Capitalise(json.types[0].type.name),\n      hp: json.stats[0].base_stat,\n      attack: json.stats[1].base_stat,\n      defence: json.stats[2].base_stat,\n      special_attack: json.stats[3].base_stat,\n      special_defence: json.stats[4].base_stat,\n      speed: json.stats[5].base_stat,\n      color: \"\"\n    };\n    console.log(pokemon);\n    dispatch({\n      type: NEW_POKEMON,\n      payload: pokemon\n    });\n  };\n\n  async function getNewColor() {\n    const colorThief = new ColorThief();\n    const img = document.getElementById(\"pokemonimg\");\n    img.crossOrigin = \"Anonymous\";\n\n    try {\n      if (img) {\n        const color = colorThief.getColor(img, 1);\n        console.log(color);\n        dispatch({\n          type: SET_COLOR,\n          payload: color\n        });\n      }\n    } catch (error) {}\n  } //! Returns the provider with its value - then props.children is just anything else added in betweem.\n\n\n  return /*#__PURE__*/_jsxDEV(PokemonContext.Provider, {\n    value: {\n      pokemon: state.pokemon,\n      loading: state.loading,\n      color: state.color,\n      getNewColor,\n      getPokemon\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = PokemonState;\nexport default PokemonState;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonState\");","map":{"version":3,"sources":["/Users/r/Desktop/React/MY PROJECTS/pokesimple/src/context/pokemon/PokemonState.js"],"names":["NEW_POKEMON","SET_COLOR","React","useReducer","PokemonContext","PokemonReducer","Capitalise","ColorThief","PokemonState","props","initialState","pokemon","color","pokemonStats","loading","state","dispatch","getPokemon","number","data","fetch","json","id","name","sprite","sprites","other","dream_world","front_default","official","artwork","type","types","hp","stats","base_stat","attack","defence","special_attack","special_defence","speed","console","log","payload","getNewColor","colorThief","img","document","getElementById","crossOrigin","getColor","error","children"],"mappings":"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","sourcesContent":["import { NEW_POKEMON, SET_COLOR } from \"../types\";\n\nimport React, { useReducer } from \"react\";\nimport PokemonContext from \"./PokemonContext\";\nimport PokemonReducer from \"./PokemonReducer\";\n\nimport { Capitalise } from \"../../utils/Capitalise\";\nimport ColorThief from \"../../../node_modules/colorthief/dist/color-thief.mjs\";\n\nconst PokemonState = (props) => {\n  const initialState = {\n    pokemon: null,\n    color: null,\n    pokemonStats: null,\n    loading: true,\n  };\n\n  //? Array is the state and dispatch (current state and action(what we call to edit the state))\n  //? ContactReducer ... Is the switch statement that takes in a COMMAND FROM the array second arguement.\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\n\n  const getPokemon = async (number) => {\n    const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${number}`);\n    const json = await data.json();\n\n    const pokemon = {\n      id: json.id,\n      name: Capitalise(json.name),\n      sprite:\n        json.sprites.other.dream_world.front_default ||\n        json.sprites.other.official - artwork.front_default,\n      type: Capitalise(json.types[0].type.name),\n      hp: json.stats[0].base_stat,\n      attack: json.stats[1].base_stat,\n      defence: json.stats[2].base_stat,\n      special_attack: json.stats[3].base_stat,\n      special_defence: json.stats[4].base_stat,\n      speed: json.stats[5].base_stat,\n      color: \"\",\n    };\n\n    console.log(pokemon);\n    dispatch({ type: NEW_POKEMON, payload: pokemon });\n  };\n\n  async function getNewColor() {\n    const colorThief = new ColorThief();\n    const img = document.getElementById(\"pokemonimg\");\n    img.crossOrigin = \"Anonymous\";\n\n    try {\n      if (img) {\n        const color = colorThief.getColor(img, 1);\n        console.log(color);\n        dispatch({ type: SET_COLOR, payload: color });\n      }\n    } catch (error) {}\n  }\n\n  //! Returns the provider with its value - then props.children is just anything else added in betweem.\n  return (\n    <PokemonContext.Provider\n      value={{\n        pokemon: state.pokemon,\n        loading: state.loading,\n        color: state.color,\n        getNewColor,\n        getPokemon,\n      }}\n    >\n      {props.children}\n    </PokemonContext.Provider>\n  );\n};\n\nexport default PokemonState;\n"]},"metadata":{},"sourceType":"module"}