{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/React/MY PROJECTS/pokesimple/src/context/pokemon/PokemonState.js\",\n    _s = $RefreshSig$();\n\nimport { NEW_POKEMON } from \"../types\";\nimport React, { useReducer } from \"react\";\nimport PokemonContext from \"./PokemonContext\";\nimport PokemonReducer from \"./PokemonReducer\";\nimport { Capitalise } from \"../../utils/Capitalise\";\nimport ColorThief from \"colorthief\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonState = props => {\n  _s();\n\n  const initialState = {\n    pokemon: null,\n    pokemonStats: null,\n    loading: true\n  }; //? Array is the state and dispatch (current state and action(what we call to edit the state))\n  //? ContactReducer ... Is the switch statement that takes in a COMMAND FROM the array second arguement.\n\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\n\n  const getPokemon = async number => {\n    const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${number}`);\n    const json = await data.json();\n    const pokemon = {\n      id: json.id,\n      name: Capitalise(json.name),\n      sprite: json.sprites.other.dream_world.front_default,\n      type: Capitalise(json.types[0].type.name),\n      hp: json.stats[0].base_stat,\n      attack: json.stats[1].base_stat,\n      defence: json.stats[2].base_stat,\n      special_attack: json.stats[3].base_stat,\n      special_defence: json.stats[4].base_stat,\n      speed: json.stats[5].base_stat,\n      color: \"\"\n    };\n    setTimeout(() => {\n      getColor();\n    }, 100);\n    dispatch({\n      type: NEW_POKEMON,\n      payload: pokemon\n    });\n  };\n\n  async function getColor() {\n    // Image element reference\n    const imgRef = /*#__PURE__*/React.createRef();\n    const img = document.getElementById(\"pokemonimg\");\n    const result = await ColorThief.getColor(document.getElementById(img, 10));\n    console.log(result);\n  } //! Returns the provider with its value - then props.children is just anything else added in betweem.\n\n\n  return /*#__PURE__*/_jsxDEV(PokemonContext.Provider, {\n    value: {\n      pokemon: state.pokemon,\n      loading: state.loading,\n      getPokemon\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = PokemonState;\nexport default PokemonState;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonState\");","map":{"version":3,"sources":["/Users/r/Desktop/React/MY PROJECTS/pokesimple/src/context/pokemon/PokemonState.js"],"names":["NEW_POKEMON","React","useReducer","PokemonContext","PokemonReducer","Capitalise","ColorThief","PokemonState","props","initialState","pokemon","pokemonStats","loading","state","dispatch","getPokemon","number","data","fetch","json","id","name","sprite","sprites","other","dream_world","front_default","type","types","hp","stats","base_stat","attack","defence","special_attack","special_defence","speed","color","setTimeout","getColor","payload","imgRef","createRef","img","document","getElementById","result","console","log","children"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,UAA5B;AAEA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,YAAY,EAAE,IAFK;AAGnBC,IAAAA,OAAO,EAAE;AAHU,GAArB,CAD8B,CAO9B;AACA;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACE,cAAD,EAAiBK,YAAjB,CAApC;;AAEA,QAAMM,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACnC,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,qCAAoCF,MAAO,EAA7C,CAAxB;AACA,UAAMG,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAL,EAAnB;AAEA,UAAMT,OAAO,GAAG;AACdU,MAAAA,EAAE,EAAED,IAAI,CAACC,EADK;AAEdC,MAAAA,IAAI,EAAEhB,UAAU,CAACc,IAAI,CAACE,IAAN,CAFF;AAGdC,MAAAA,MAAM,EAAEH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmBC,WAAnB,CAA+BC,aAHzB;AAIdC,MAAAA,IAAI,EAAEtB,UAAU,CAACc,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcD,IAAd,CAAmBN,IAApB,CAJF;AAKdQ,MAAAA,EAAE,EAAEV,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcC,SALJ;AAMdC,MAAAA,MAAM,EAAEb,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcC,SANR;AAOdE,MAAAA,OAAO,EAAEd,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcC,SAPT;AAQdG,MAAAA,cAAc,EAAEf,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcC,SARhB;AASdI,MAAAA,eAAe,EAAEhB,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcC,SATjB;AAUdK,MAAAA,KAAK,EAAEjB,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcC,SAVP;AAWdM,MAAAA,KAAK,EAAE;AAXO,KAAhB;AAcAC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,QAAQ;AACT,KAFS,EAEP,GAFO,CAAV;AAIAzB,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAE3B,WAAR;AAAqBwC,MAAAA,OAAO,EAAE9B;AAA9B,KAAD,CAAR;AACD,GAvBD;;AAyBA,iBAAe6B,QAAf,GAA0B;AACxB;AACA,UAAME,MAAM,gBAAGxC,KAAK,CAACyC,SAAN,EAAf;AACA,UAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAZ;AACA,UAAMC,MAAM,GAAG,MAAMxC,UAAU,CAACiC,QAAX,CAAoBK,QAAQ,CAACC,cAAT,CAAwBF,GAAxB,EAA6B,EAA7B,CAApB,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GA1C6B,CA4C9B;;;AACA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLpC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OADV;AAELE,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFV;AAGLG,MAAAA;AAHK,KADT;AAAA,cAOGP,KAAK,CAACyC;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxDD;;GAAM1C,Y;;KAAAA,Y;AA0DN,eAAeA,YAAf","sourcesContent":["import { NEW_POKEMON } from \"../types\";\n\nimport React, { useReducer } from \"react\";\nimport PokemonContext from \"./PokemonContext\";\nimport PokemonReducer from \"./PokemonReducer\";\n\nimport { Capitalise } from \"../../utils/Capitalise\";\n\nimport ColorThief from \"colorthief\";\n\nconst PokemonState = (props) => {\n  const initialState = {\n    pokemon: null,\n    pokemonStats: null,\n    loading: true,\n  };\n\n  //? Array is the state and dispatch (current state and action(what we call to edit the state))\n  //? ContactReducer ... Is the switch statement that takes in a COMMAND FROM the array second arguement.\n  const [state, dispatch] = useReducer(PokemonReducer, initialState);\n\n  const getPokemon = async (number) => {\n    const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${number}`);\n    const json = await data.json();\n\n    const pokemon = {\n      id: json.id,\n      name: Capitalise(json.name),\n      sprite: json.sprites.other.dream_world.front_default,\n      type: Capitalise(json.types[0].type.name),\n      hp: json.stats[0].base_stat,\n      attack: json.stats[1].base_stat,\n      defence: json.stats[2].base_stat,\n      special_attack: json.stats[3].base_stat,\n      special_defence: json.stats[4].base_stat,\n      speed: json.stats[5].base_stat,\n      color: \"\",\n    };\n\n    setTimeout(() => {\n      getColor();\n    }, 100);\n\n    dispatch({ type: NEW_POKEMON, payload: pokemon });\n  };\n\n  async function getColor() {\n    // Image element reference\n    const imgRef = React.createRef();\n    const img = document.getElementById(\"pokemonimg\");\n    const result = await ColorThief.getColor(document.getElementById(img, 10));\n    console.log(result);\n  }\n\n  //! Returns the provider with its value - then props.children is just anything else added in betweem.\n  return (\n    <PokemonContext.Provider\n      value={{\n        pokemon: state.pokemon,\n        loading: state.loading,\n        getPokemon,\n      }}\n    >\n      {props.children}\n    </PokemonContext.Provider>\n  );\n};\n\nexport default PokemonState;\n"]},"metadata":{},"sourceType":"module"}