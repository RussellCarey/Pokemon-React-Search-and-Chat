[{"/Users/r/Desktop/Poke-react/client/src/index.js":"1","/Users/r/Desktop/Poke-react/client/src/App.js":"2","/Users/r/Desktop/Poke-react/client/src/context/chat/ChatState.js":"3","/Users/r/Desktop/Poke-react/client/src/components/pokemonArea/pokemonMain.js":"4","/Users/r/Desktop/Poke-react/client/src/context/pokemon/PokemonState.js":"5","/Users/r/Desktop/Poke-react/client/src/context/types.js":"6","/Users/r/Desktop/Poke-react/client/src/context/chat/ChatContext.js":"7","/Users/r/Desktop/Poke-react/client/src/context/chat/ChatReducer.js":"8","/Users/r/Desktop/Poke-react/client/src/japaneseNames.js":"9","/Users/r/Desktop/Poke-react/client/src/context/pokemon/PokemonContext.js":"10","/Users/r/Desktop/Poke-react/client/src/components/pokemonArea/pokemonNumberSide.js":"11","/Users/r/Desktop/Poke-react/client/src/context/pokemon/PokemonReducer.js":"12","/Users/r/Desktop/Poke-react/client/src/utils/Capitalise.js":"13","/Users/r/Desktop/Poke-react/client/src/components/chatbox/ChatWindow.js":"14","/Users/r/Desktop/Poke-react/client/src/components/ui/CircleButton.js":"15","/Users/r/Desktop/Poke-react/client/src/components/ui/SearchBar.js":"16"},{"size":197,"mtime":1622174048685,"results":"17","hashOfConfig":"18"},{"size":534,"mtime":1622367278837,"results":"19","hashOfConfig":"18"},{"size":955,"mtime":1623750712307,"results":"20","hashOfConfig":"18"},{"size":3988,"mtime":1622790049712,"results":"21","hashOfConfig":"18"},{"size":2344,"mtime":1622354016677,"results":"22","hashOfConfig":"18"},{"size":209,"mtime":1622412518331,"results":"23","hashOfConfig":"18"},{"size":106,"mtime":1622362496343,"results":"24","hashOfConfig":"18"},{"size":399,"mtime":1622412583370,"results":"25","hashOfConfig":"18"},{"size":16048,"mtime":1622191155716,"results":"26","hashOfConfig":"18"},{"size":112,"mtime":1622187496733,"results":"27","hashOfConfig":"18"},{"size":2764,"mtime":1622790014379,"results":"28","hashOfConfig":"18"},{"size":367,"mtime":1622323545154,"results":"29","hashOfConfig":"18"},{"size":169,"mtime":1622275865051,"results":"30","hashOfConfig":"18"},{"size":2723,"mtime":1623750671156,"results":"31","hashOfConfig":"18"},{"size":279,"mtime":1622411990213,"results":"32","hashOfConfig":"18"},{"size":1100,"mtime":1622358900440,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jddrg",{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"/Users/r/Desktop/Poke-react/client/src/index.js",[],"/Users/r/Desktop/Poke-react/client/src/App.js",["73","74","75","76","77"],"import \"./css/pokemon.css\";\nimport \"./css/buttons.css\";\nimport \"./css/searchBox.css\";\nimport \"./css/chatWindow.css\";\n\nimport React, { useRef, useState, useContext, Fragmen, useEffect } from \"react\";\n\nimport PokemonState from \"./context/pokemon/PokemonState\";\nimport { PokemonInfo } from \"./components/pokemonArea/pokemonMain\";\nimport ChatState from \"./context/chat/ChatState\";\n\nfunction App() {\n  return (\n    <PokemonState>\n      <ChatState>\n        <PokemonInfo />\n      </ChatState>\n    </PokemonState>\n  );\n}\n\nexport default App;\n","/Users/r/Desktop/Poke-react/client/src/context/chat/ChatState.js",["78"],"import { NEW_MESSAGE, SEND_MESSAGE, CHAT_RESIZE } from \"../types\";\n\nimport React, { useReducer } from \"react\";\nimport ChatContext from \"./ChatContext\";\nimport ChatReducer from \"./ChatReducer\";\n\nconst ChatState = (props) => {\n  const initialState = {\n    messages: [],\n    isShown: false,\n  };\n\n  const [state, dispatch] = useReducer(ChatReducer, initialState);\n\n  const onMessage = (message) => {\n    console.log(\"State recieved a new message\" + message);\n    dispatch({ type: NEW_MESSAGE, payload: message });\n  };\n\n  const onChatResize = () => {\n    dispatch({ type: CHAT_RESIZE });\n  };\n\n  //! Returns the provider with its value - then props.children is just anything else added in betweem.\n  return (\n    <ChatContext.Provider\n      value={{\n        messages: state.messages,\n        isShown: state.isShown,\n        onMessage,\n        onChatResize,\n      }}\n    >\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n\nexport default ChatState;\n","/Users/r/Desktop/Poke-react/client/src/components/pokemonArea/pokemonMain.js",["79","80","81"],"import React, { useContext, useEffect, Fragment, useState } from \"react\";\nimport PokemonContext from \"../../context/pokemon/PokemonContext\";\nimport ChatContext from \"../../context/chat/ChatContext\";\nimport japaneseNames from \"../../japaneseNames\";\n\nimport { Capitalise } from \"../../utils/Capitalise\";\n\nimport { ChatWindow } from \"../../components/chatbox/ChatWindow\";\nimport { PokemonNumberSide } from \"../../components/pokemonArea/pokemonNumberSide\";\nimport { CircleButton } from \"../../components/ui/CircleButton\";\nimport { SearchBar } from \"../../components/ui/SearchBar\";\n\nexport const PokemonInfo = () => {\n  const pokemonContext = useContext(PokemonContext);\n  const chatContext = useContext(ChatContext);\n  const { getPokemon, pokemon, loading, color, getNewColor } = pokemonContext;\n  const { onChatResize, isShown } = chatContext;\n\n  useEffect(() => {\n    const random = Math.floor(Math.random() * 800);\n    getPokemon(random);\n  }, []);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <div className=\"loadingDiv\">\n          <h1 className=\"loadingPokemon\">Loading pokemon</h1>\n        </div>\n      ) : (\n        <div\n          className=\"container\"\n          id=\"container\"\n          style={\n            color\n              ? {\n                  backgroundColor: `rgba(${color[0]}, ${color[1] + 15}, ${\n                    color[2] + 70\n                  })`,\n                }\n              : { backgroundColor: \"white\" }\n          }\n        >\n          <PokemonNumberSide handleOnClick={onChatResize} />\n          <CircleButton\n            id={\"far fa-comment-alt\"}\n            addedClass={\"circleButton__menu\"}\n            handleOnClick={onChatResize}\n          />\n          <SearchBar />\n          <ChatWindow />\n          {/* Pokemon Name and image area*/}\n          <div className=\"pokemonImageArea\">\n            <h5 className=\"pokemonImageArea__pokemonNumber\">#{pokemon.id}</h5>\n            <h2 className=\"pokemonImageArea__pokemonName\">{pokemon.name}</h2>\n            <h1 className=\"pokemonImageArea__japaneseName\">\n              {japaneseNames[pokemon.id]}\n            </h1>\n            <img\n              src={pokemon.sprite}\n              class=\"pokemonImageArea__pokemonImage\"\n              alt=\"pokemon\"\n              id=\"pokemonimg\"\n              onLoad={() => {\n                getNewColor();\n              }}\n            />\n          </div>\n\n          {/* Pokemon stats area*/}\n          <div className=\"pokemonStatsArea\">\n            <div className=\"pokemonStatsArea__icons\">\n              {pokemon.types.map((type) => {\n                return (\n                  <img\n                    src={`/images/types/${Capitalise(type.type.name)}.png`}\n                    class=\"pokemonStatsArea__icons__icon\"\n                    alt=\"pokemonType\"\n                  />\n                );\n              })}\n            </div>\n\n            <div className=\"pokemonStatsArea__stats\">\n              <h4 className=\"pokemonStatsArea__stats__title\">Base stats:</h4>\n              <div className=\"pokemonStatsArea__stats__values\">\n                <p className=\"pokemonStatsArea__stats__values__value \">\n                  HP: {pokemon.hp}\n                </p>\n                <p className=\"pokemonStatsArea__stats__values__value \">\n                  ATTACK: {pokemon.attack}\n                </p>\n                <p className=\"pokemonStatsArea__stats__values__value \">\n                  DEFENCE: {pokemon.defence}\n                </p>\n                <p className=\"pokemonStatsArea__stats__values__value \">\n                  SP. ATTACK: {pokemon.special_attack}\n                </p>\n                <p className=\"pokemonStatsArea__stats__values__value \">\n                  SP. DEFENCE: {pokemon.sspecial_defence}\n                </p>\n                <p className=\"pokemonStatsArea__stats__values__value \">\n                  SPEED: {pokemon.speed}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n","/Users/r/Desktop/Poke-react/client/src/context/pokemon/PokemonState.js",[],"/Users/r/Desktop/Poke-react/client/src/context/types.js",[],"/Users/r/Desktop/Poke-react/client/src/context/chat/ChatContext.js",[],"/Users/r/Desktop/Poke-react/client/src/context/chat/ChatReducer.js",["82","83"],"import { CHAT_RESIZE, NEW_MESSAGE, SET_MESSAGE } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case NEW_MESSAGE:\n      return {\n        ...state,\n        messages: [...state.messages, action.payload],\n      };\n    case CHAT_RESIZE:\n      return {\n        ...state,\n        isShown: state.isShown ? false : true,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/r/Desktop/Poke-react/client/src/japaneseNames.js",[],"/Users/r/Desktop/Poke-react/client/src/context/pokemon/PokemonContext.js",[],"/Users/r/Desktop/Poke-react/client/src/components/pokemonArea/pokemonNumberSide.js",[],"/Users/r/Desktop/Poke-react/client/src/context/pokemon/PokemonReducer.js",["84"],"import { NEW_POKEMON, SET_COLOR } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case NEW_POKEMON:\n      return {\n        ...state,\n        pokemon: action.payload,\n        loading: false,\n      };\n    case SET_COLOR:\n      return {\n        ...state,\n        color: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/r/Desktop/Poke-react/client/src/utils/Capitalise.js",[],"/Users/r/Desktop/Poke-react/client/src/components/chatbox/ChatWindow.js",["85","86","87"],"import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport ChatContext from \"../../context/chat/ChatContext\";\nimport PokemonContext from \"../../context/pokemon/PokemonContext\";\n\nimport { CircleButton } from \"../ui/CircleButton\";\n\nexport const ChatWindow = () => {\n  const chatContext = useContext(ChatContext);\n  const pokemonContext = useContext(PokemonContext);\n\n  const { messages, onMessage, isShown, onChatResize } = chatContext;\n  const { color } = pokemonContext;\n\n  const [typing, setTyping] = useState([]);\n  const [connceted, setConnected] = useState(false);\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    // Set the IO object for handling socket\n    socketRef.current = io(\"http://localhost:3333\");\n\n    // On recieving connecting  confirmaiton\n    socketRef.current.on(\"connected\", () => {\n      //! This is where we set that we are connectd - if not show a not connected screen\n      setConnected(true);\n    });\n\n    // On getting a newmessag from the esrver\n    socketRef.current.on(\"newMessage\", (message) => {\n      onMessage(message);\n    });\n\n    // On demount close connection\n    return () => socketRef.current.disconnect();\n  }, [messages, color]);\n\n  // Handle when the user types\n  const handleTyping = () => {\n    setTyping(document.getElementById(\"chatInput\").value);\n  };\n\n  // Handle the submit button on the chat\n  const handleChatSubmit = (e) => {\n    const input = document.getElementById(\"chatInput\").value;\n    const message = { name: \"Russell\", message: input };\n    socketRef.current.emit(\"message\", message);\n  };\n\n  const handleCloseWindow = () => {\n    onChatResize();\n  };\n\n  return (\n    <div\n      className=\"chatWindow\"\n      style={isShown ? { left: \"0\" } : { left: \"-150%\" }}\n    >\n      <div className=\"notConnected\">\n        {/* Show an opaque scree with a cross or message saying cannot connect please refresh or wait..*/}\n      </div>\n      <div className=\"chatWindow__messages\">\n        {messages.map((message) => {\n          return (\n            <div className=\"message\">\n              <p>{message.name}</p>\n              <p>{message.message}</p>\n            </div>\n          );\n        })}\n        <CircleButton\n          id={\"fas fa-times\"}\n          addedClass=\"circleButton__closeChat\"\n          handleOnClick={handleCloseWindow}\n        />\n      </div>\n      <div className=\"chatWindow__submitArea\">\n        <textarea\n          className=\"chatWindow__submitArea__input\"\n          id={\"chatInput\"}\n          onChange={handleTyping}\n        />\n        <button\n          className=\"chatWindow__submitArea__submitButton\"\n          onClick={handleChatSubmit}\n        ></button>\n      </div>\n    </div>\n  );\n};\n","/Users/r/Desktop/Poke-react/client/src/components/ui/CircleButton.js",[],"/Users/r/Desktop/Poke-react/client/src/components/ui/SearchBar.js",["88","89","90","91","92","93","94","95"],"import React, { Fragment, useState, useContext, useEffect } from \"react\";\n\nimport PokemonContext from \"../../context/pokemon/PokemonContext\";\n\nexport const SearchBar = () => {\n  const pokemonContext = useContext(PokemonContext);\n  const { getPokemon, pokemon, loading, color, getNewColor } = pokemonContext;\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    const bar = document.getElementById(\"searchField\");\n    bar.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\") {\n        const searchItem = bar.value.toLowerCase();\n        getPokemon(searchItem);\n      }\n    });\n  }, []);\n\n  function handleSearchChange(value) {\n    setSearchText(value);\n  }\n\n  function handleSearchSubmit(e) {\n    e.preventDefault();\n  }\n\n  return (\n    <fragment>\n      <label htmlFor=\"searchField\"></label>\n      <input\n        type=\"text\"\n        className=\"searchInput\"\n        name=\"searchField\"\n        id=\"searchField\"\n        placeholder=\"Name or Number\"\n        onChange={(e) => {\n          handleSearchChange(e.target.value);\n        }}\n      />\n    </fragment>\n  );\n};\n",{"ruleId":"96","severity":1,"message":"97","line":6,"column":17,"nodeType":"98","messageId":"99","endLine":6,"endColumn":23},{"ruleId":"96","severity":1,"message":"100","line":6,"column":25,"nodeType":"98","messageId":"99","endLine":6,"endColumn":33},{"ruleId":"96","severity":1,"message":"101","line":6,"column":35,"nodeType":"98","messageId":"99","endLine":6,"endColumn":45},{"ruleId":"96","severity":1,"message":"102","line":6,"column":47,"nodeType":"98","messageId":"99","endLine":6,"endColumn":54},{"ruleId":"96","severity":1,"message":"103","line":6,"column":56,"nodeType":"98","messageId":"99","endLine":6,"endColumn":65},{"ruleId":"96","severity":1,"message":"104","line":1,"column":23,"nodeType":"98","messageId":"99","endLine":1,"endColumn":35},{"ruleId":"96","severity":1,"message":"100","line":1,"column":50,"nodeType":"98","messageId":"99","endLine":1,"endColumn":58},{"ruleId":"96","severity":1,"message":"105","line":17,"column":25,"nodeType":"98","messageId":"99","endLine":17,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":22,"column":6,"nodeType":"108","endLine":22,"endColumn":8,"suggestions":"109"},{"ruleId":"96","severity":1,"message":"110","line":1,"column":36,"nodeType":"98","messageId":"99","endLine":1,"endColumn":47},{"ruleId":"111","severity":1,"message":"112","line":3,"column":1,"nodeType":"113","endLine":19,"endColumn":3},{"ruleId":"111","severity":1,"message":"112","line":3,"column":1,"nodeType":"113","endLine":19,"endColumn":3},{"ruleId":"96","severity":1,"message":"114","line":15,"column":10,"nodeType":"98","messageId":"99","endLine":15,"endColumn":16},{"ruleId":"96","severity":1,"message":"115","line":16,"column":10,"nodeType":"98","messageId":"99","endLine":16,"endColumn":19},{"ruleId":"106","severity":1,"message":"116","line":37,"column":6,"nodeType":"108","endLine":37,"endColumn":23,"suggestions":"117"},{"ruleId":"96","severity":1,"message":"118","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"119","line":7,"column":23,"nodeType":"98","messageId":"99","endLine":7,"endColumn":30},{"ruleId":"96","severity":1,"message":"120","line":7,"column":32,"nodeType":"98","messageId":"99","endLine":7,"endColumn":39},{"ruleId":"96","severity":1,"message":"121","line":7,"column":41,"nodeType":"98","messageId":"99","endLine":7,"endColumn":46},{"ruleId":"96","severity":1,"message":"122","line":7,"column":48,"nodeType":"98","messageId":"99","endLine":7,"endColumn":59},{"ruleId":"96","severity":1,"message":"123","line":9,"column":10,"nodeType":"98","messageId":"99","endLine":9,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":19,"column":6,"nodeType":"108","endLine":19,"endColumn":8,"suggestions":"124"},{"ruleId":"96","severity":1,"message":"125","line":25,"column":12,"nodeType":"98","messageId":"99","endLine":25,"endColumn":30},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'Fragmen' is defined but never used.","'useEffect' is defined but never used.","'SEND_MESSAGE' is defined but never used.","'isShown' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPokemon'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'SET_MESSAGE' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'typing' is assigned a value but never used.","'connceted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onMessage'. Either include it or remove the dependency array.",["127"],"'Fragment' is defined but never used.","'pokemon' is assigned a value but never used.","'loading' is assigned a value but never used.","'color' is assigned a value but never used.","'getNewColor' is assigned a value but never used.","'searchText' is assigned a value but never used.",["128"],"'handleSearchSubmit' is defined but never used.",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"129","fix":"133"},"Update the dependencies array to be: [getPokemon]",{"range":"134","text":"135"},"Update the dependencies array to be: [messages, color, onMessage]",{"range":"136","text":"137"},{"range":"138","text":"135"},[943,945],"[getPokemon]",[1214,1231],"[messages, color, onMessage]",[619,621]]